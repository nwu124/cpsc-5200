// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlazorServer.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\wunat\Google Drive\GitHub\cpsc-5200\AddressSearch\BlazorServer\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\wunat\Google Drive\GitHub\cpsc-5200\AddressSearch\BlazorServer\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\wunat\Google Drive\GitHub\cpsc-5200\AddressSearch\BlazorServer\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\wunat\Google Drive\GitHub\cpsc-5200\AddressSearch\BlazorServer\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\wunat\Google Drive\GitHub\cpsc-5200\AddressSearch\BlazorServer\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\wunat\Google Drive\GitHub\cpsc-5200\AddressSearch\BlazorServer\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\wunat\Google Drive\GitHub\cpsc-5200\AddressSearch\BlazorServer\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\wunat\Google Drive\GitHub\cpsc-5200\AddressSearch\BlazorServer\_Imports.razor"
using BlazorServer;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\wunat\Google Drive\GitHub\cpsc-5200\AddressSearch\BlazorServer\_Imports.razor"
using BlazorServer.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\wunat\Google Drive\GitHub\cpsc-5200\AddressSearch\BlazorServer\Pages\Index.razor"
using BlazorServer.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\wunat\Google Drive\GitHub\cpsc-5200\AddressSearch\BlazorServer\Pages\Index.razor"
using System.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\wunat\Google Drive\GitHub\cpsc-5200\AddressSearch\BlazorServer\Pages\Index.razor"
using MySql.Data.MySqlClient;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\wunat\Google Drive\GitHub\cpsc-5200\AddressSearch\BlazorServer\Pages\Index.razor"
using Dapper;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    public partial class Index : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 143 "C:\Users\wunat\Google Drive\GitHub\cpsc-5200\AddressSearch\BlazorServer\Pages\Index.razor"
       
    string connectionString = "Server=127.0.0.1;Port=3306;database=addresses;user id=root;password=nathaniel";
    // string connectionString = "Server=127.0.0.1;Port=3306;database=addresses;user id=root;password=Higgins5021";

    AddressModel user;
    AddressModel countrySearch;
    List<AddressModel> searchResults;
    List<CountryFormatModel> country;

    protected override void OnInitialized()
    {
        user = new AddressModel();
        countrySearch = new AddressModel();
    }

    public void Submit()
    {
        // this method calls on valid form
        // save form data by posting data to your api
    }

    public async Task SearchExactData()
    {
        string sql = "use addresses; " +
            "select * from addressdb " +
            "where StreetAddress=@StreetAddress and Neighborhood=@Neighborhood and City=@City and County=@County and State=@State " +
            "and Province=@Province and PostalCode=@PostalCode and PostOffice=@PostOffice and Country=@Country;";

        using (IDbConnection connection = new MySqlConnection(connectionString))
        {
            var rows = await connection.QueryAsync<AddressModel>(sql, new
            {
                StreetAddress = user.StreetAddress,
                Neighborhood = user.Neighborhood,
                City = user.City,
                County = user.County,
                State = user.State,
                Province = user.Province,
                PostalCode = user.PostalCode,
                PostOffice = user.PostOffice,
                Country = user.Country
            });
            searchResults = rows.ToList();
        }
        await OnInitializedAsync();
    }

    public async Task SearchPartialDataLocal()
    {
        string sql = "use addresses; " +
            "select * from addressdb " +
            "where (StreetAddress=@StreetAddress or Neighborhood=@Neighborhood or City=@City or County=@County or State=@State " +
            "or Province=@Province or PostalCode=@PostalCode or PostOffice=@PostOffice) and Country=@Country;";


        using (IDbConnection connection = new MySqlConnection(connectionString))
        {
            var rows = await connection.QueryAsync<AddressModel>(sql, new
            {
                StreetAddress = user.StreetAddress,
                Neighborhood = user.Neighborhood,
                City = user.City,
                County = user.County,
                State = user.State,
                Province = user.Province,
                PostalCode = user.PostalCode,
                PostOffice = user.PostOffice,
                Country = user.Country
            });
            searchResults = rows.ToList();
        }

        await OnInitializedAsync();
    }
    public async Task SearchPartialDataInternational()
    {
        string sql = "use addresses; " +
            "select * from addressdb " +
            "where StreetAddress=@StreetAddress or Neighborhood=@Neighborhood or City=@City or County=@County or State=@State " +
            "or Province=@Province or PostalCode=@PostalCode or PostOffice=@PostOffice or Country=@Country;";


        using (IDbConnection connection = new MySqlConnection(connectionString))
        {
            var rows = await connection.QueryAsync<AddressModel>(sql, new
            {
                StreetAddress = user.StreetAddress,
                Neighborhood = user.Neighborhood,
                City = user.City,
                County = user.County,
                State = user.State,
                Province = user.Province,
                PostalCode = user.PostalCode,
                PostOffice = user.PostOffice,
                Country = user.Country
            });
            searchResults = rows.ToList();
        }

        await OnInitializedAsync();
    }

    public async Task SearchCountry()
    {
        string sql = "use addresses; " +
            "select * from countriesdb " +
            "where Country=@Country;";

        using (IDbConnection connection = new MySqlConnection(connectionString))
        {
            var rows = await connection.QueryAsync<CountryFormatModel>(sql, new
            {
                Country = countrySearch.Country
            });
            country = rows.ToList();
        }

    }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
